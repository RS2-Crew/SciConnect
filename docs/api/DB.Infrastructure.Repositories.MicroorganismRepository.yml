### YamlMime:ManagedReference
items:
- uid: DB.Infrastructure.Repositories.MicroorganismRepository
  commentId: T:DB.Infrastructure.Repositories.MicroorganismRepository
  id: MicroorganismRepository
  parent: DB.Infrastructure.Repositories
  children:
  - DB.Infrastructure.Repositories.MicroorganismRepository.#ctor(DB.Infrastructure.Persistance.SqlServerContext)
  - DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync(System.String)
  - DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName(System.String)
  langs:
  - csharp
  - vb
  name: MicroorganismRepository
  nameWithType: MicroorganismRepository
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository
  type: Class
  source:
    remote:
      path: SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: MicroorganismRepository
    path: ../SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
    startLine: 12
  assemblies:
  - DB.Infrastructure
  namespace: DB.Infrastructure.Repositories
  syntax:
    content: 'public class MicroorganismRepository : RepositoryBase<Microorganism>, IMicroorganismRepository, IAsyncRepository<Microorganism>'
    content.vb: Public Class MicroorganismRepository Inherits RepositoryBase(Of Microorganism) Implements IMicroorganismRepository, IAsyncRepository(Of Microorganism)
  inheritance:
  - System.Object
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  implements:
  - DB.Application.Contracts.Persistance.IMicroorganismRepository
  - DB.Application.Contracts.Persistance.IAsyncRepository{DB.Domain.Entities.Microorganism}
  inheritedMembers:
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}._dbContext
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAllAsync
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}})
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.String,System.Boolean)
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Object}}},System.Boolean)
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetByIdAsync(System.Int32)
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.AddAsync(DB.Domain.Entities.Microorganism)
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.UpdateAsync(DB.Domain.Entities.Microorganism)
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.DeleteAsync(DB.Domain.Entities.Microorganism)
  - DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetQueryable(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DB.Infrastructure.Repositories.MicroorganismRepository.#ctor(DB.Infrastructure.Persistance.SqlServerContext)
  commentId: M:DB.Infrastructure.Repositories.MicroorganismRepository.#ctor(DB.Infrastructure.Persistance.SqlServerContext)
  id: '#ctor(DB.Infrastructure.Persistance.SqlServerContext)'
  parent: DB.Infrastructure.Repositories.MicroorganismRepository
  langs:
  - csharp
  - vb
  name: MicroorganismRepository(SqlServerContext)
  nameWithType: MicroorganismRepository.MicroorganismRepository(SqlServerContext)
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository.MicroorganismRepository(DB.Infrastructure.Persistance.SqlServerContext)
  type: Constructor
  source:
    remote:
      path: SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: .ctor
    path: ../SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
    startLine: 14
  assemblies:
  - DB.Infrastructure
  namespace: DB.Infrastructure.Repositories
  syntax:
    content: public MicroorganismRepository(SqlServerContext dbContext)
    parameters:
    - id: dbContext
      type: DB.Infrastructure.Persistance.SqlServerContext
    content.vb: Public Sub New(dbContext As SqlServerContext)
  overload: DB.Infrastructure.Repositories.MicroorganismRepository.#ctor*
  nameWithType.vb: MicroorganismRepository.New(SqlServerContext)
  fullName.vb: DB.Infrastructure.Repositories.MicroorganismRepository.New(DB.Infrastructure.Persistance.SqlServerContext)
  name.vb: New(SqlServerContext)
- uid: DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync(System.String)
  commentId: M:DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync(System.String)
  id: GetByNameAsync(System.String)
  parent: DB.Infrastructure.Repositories.MicroorganismRepository
  langs:
  - csharp
  - vb
  name: GetByNameAsync(string)
  nameWithType: MicroorganismRepository.GetByNameAsync(string)
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync(string)
  type: Method
  source:
    remote:
      path: SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: GetByNameAsync
    path: ../SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
    startLine: 17
  assemblies:
  - DB.Infrastructure
  namespace: DB.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<Microorganism?> GetByNameAsync(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{DB.Domain.Entities.Microorganism}
    content.vb: Public Function GetByNameAsync(name As String) As Task(Of Microorganism)
  overload: DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync*
  implements:
  - DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(System.String)
  nameWithType.vb: MicroorganismRepository.GetByNameAsync(String)
  fullName.vb: DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync(String)
  name.vb: GetByNameAsync(String)
- uid: DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName(System.String)
  commentId: M:DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName(System.String)
  id: GetMicroorganismByName(System.String)
  parent: DB.Infrastructure.Repositories.MicroorganismRepository
  langs:
  - csharp
  - vb
  name: GetMicroorganismByName(string)
  nameWithType: MicroorganismRepository.GetMicroorganismByName(string)
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName(string)
  type: Method
  source:
    remote:
      path: SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: GetMicroorganismByName
    path: ../SciConnect/DB.Infrastructure/Repositories/MicroorganismRepository.cs
    startLine: 23
  assemblies:
  - DB.Infrastructure
  namespace: DB.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<IReadOnlyCollection<Microorganism>> GetMicroorganismByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Domain.Entities.Microorganism}}
    content.vb: Public Function GetMicroorganismByName(name As String) As Task(Of IReadOnlyCollection(Of Microorganism))
  overload: DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName*
  implements:
  - DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(System.String)
  nameWithType.vb: MicroorganismRepository.GetMicroorganismByName(String)
  fullName.vb: DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName(String)
  name.vb: GetMicroorganismByName(String)
references:
- uid: DB.Infrastructure.Repositories
  commentId: N:DB.Infrastructure.Repositories
  href: DB.html
  name: DB.Infrastructure.Repositories
  nameWithType: DB.Infrastructure.Repositories
  fullName: DB.Infrastructure.Repositories
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Infrastructure
    name: Infrastructure
    href: DB.Infrastructure.html
  - name: .
  - uid: DB.Infrastructure.Repositories
    name: Repositories
    href: DB.Infrastructure.Repositories.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Infrastructure
    name: Infrastructure
    href: DB.Infrastructure.html
  - name: .
  - uid: DB.Infrastructure.Repositories
    name: Repositories
    href: DB.Infrastructure.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  commentId: T:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  parent: DB.Infrastructure.Repositories
  definition: DB.Infrastructure.Repositories.RepositoryBase`1
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html
  name: RepositoryBase<Microorganism>
  nameWithType: RepositoryBase<Microorganism>
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>
  nameWithType.vb: RepositoryBase(Of Microorganism)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism)
  name.vb: RepositoryBase(Of Microorganism)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1
    name: RepositoryBase
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1
    name: RepositoryBase
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
- uid: DB.Application.Contracts.Persistance.IMicroorganismRepository
  commentId: T:DB.Application.Contracts.Persistance.IMicroorganismRepository
  parent: DB.Application.Contracts.Persistance
  href: DB.Application.Contracts.Persistance.IMicroorganismRepository.html
  name: IMicroorganismRepository
  nameWithType: IMicroorganismRepository
  fullName: DB.Application.Contracts.Persistance.IMicroorganismRepository
- uid: DB.Application.Contracts.Persistance.IAsyncRepository{DB.Domain.Entities.Microorganism}
  commentId: T:DB.Application.Contracts.Persistance.IAsyncRepository{DB.Domain.Entities.Microorganism}
  parent: DB.Application.Contracts.Persistance
  definition: DB.Application.Contracts.Persistance.IAsyncRepository`1
  href: DB.Application.Contracts.Persistance.IAsyncRepository-1.html
  name: IAsyncRepository<Microorganism>
  nameWithType: IAsyncRepository<Microorganism>
  fullName: DB.Application.Contracts.Persistance.IAsyncRepository<DB.Domain.Entities.Microorganism>
  nameWithType.vb: IAsyncRepository(Of Microorganism)
  fullName.vb: DB.Application.Contracts.Persistance.IAsyncRepository(Of DB.Domain.Entities.Microorganism)
  name.vb: IAsyncRepository(Of Microorganism)
  spec.csharp:
  - uid: DB.Application.Contracts.Persistance.IAsyncRepository`1
    name: IAsyncRepository
    href: DB.Application.Contracts.Persistance.IAsyncRepository-1.html
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  spec.vb:
  - uid: DB.Application.Contracts.Persistance.IAsyncRepository`1
    name: IAsyncRepository
    href: DB.Application.Contracts.Persistance.IAsyncRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}._dbContext
  commentId: F:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}._dbContext
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1._dbContext
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1__dbContext
  name: _dbContext
  nameWithType: RepositoryBase<Microorganism>._dbContext
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>._dbContext
  nameWithType.vb: RepositoryBase(Of Microorganism)._dbContext
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism)._dbContext
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAllAsync
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAllAsync
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.GetAllAsync
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: RepositoryBase<Microorganism>.GetAllAsync()
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.GetAllAsync()
  nameWithType.vb: RepositoryBase(Of Microorganism).GetAllAsync()
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).GetAllAsync()
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAllAsync
    name: GetAllAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAllAsync
    name: GetAllAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAllAsync
  - name: (
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}})
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}})
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: GetAsync(Expression<Func<Microorganism, bool>>)
  nameWithType: RepositoryBase<Microorganism>.GetAsync(Expression<Func<Microorganism, bool>>)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.GetAsync(System.Linq.Expressions.Expression<System.Func<DB.Domain.Entities.Microorganism, bool>>)
  nameWithType.vb: RepositoryBase(Of Microorganism).GetAsync(Expression(Of Func(Of Microorganism, Boolean)))
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).GetAsync(System.Linq.Expressions.Expression(Of System.Func(Of DB.Domain.Entities.Microorganism, Boolean)))
  name.vb: GetAsync(Expression(Of Func(Of Microorganism, Boolean)))
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}})
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}})
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.String,System.Boolean)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.String,System.Boolean)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Boolean)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_System_Boolean_
  name: GetAsync(Expression<Func<Microorganism, bool>>, Func<IQueryable<Microorganism>, IOrderedQueryable<Microorganism>>, string, bool)
  nameWithType: RepositoryBase<Microorganism>.GetAsync(Expression<Func<Microorganism, bool>>, Func<IQueryable<Microorganism>, IOrderedQueryable<Microorganism>>, string, bool)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.GetAsync(System.Linq.Expressions.Expression<System.Func<DB.Domain.Entities.Microorganism, bool>>, System.Func<System.Linq.IQueryable<DB.Domain.Entities.Microorganism>, System.Linq.IOrderedQueryable<DB.Domain.Entities.Microorganism>>, string, bool)
  nameWithType.vb: RepositoryBase(Of Microorganism).GetAsync(Expression(Of Func(Of Microorganism, Boolean)), Func(Of IQueryable(Of Microorganism), IOrderedQueryable(Of Microorganism)), String, Boolean)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).GetAsync(System.Linq.Expressions.Expression(Of System.Func(Of DB.Domain.Entities.Microorganism, Boolean)), System.Func(Of System.Linq.IQueryable(Of DB.Domain.Entities.Microorganism), System.Linq.IOrderedQueryable(Of DB.Domain.Entities.Microorganism)), String, Boolean)
  name.vb: GetAsync(Expression(Of Func(Of Microorganism, Boolean)), Func(Of IQueryable(Of Microorganism), IOrderedQueryable(Of Microorganism)), String, Boolean)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.String,System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.String,System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Object}}},System.Boolean)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Object}}},System.Boolean)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{`0,System.Object}}},System.Boolean)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_Collections_Generic_List_System_Linq_Expressions_Expression_System_Func__0_System_Object____System_Boolean_
  name: GetAsync(Expression<Func<Microorganism, bool>>, Func<IQueryable<Microorganism>, IOrderedQueryable<Microorganism>>, List<Expression<Func<Microorganism, object>>>, bool)
  nameWithType: RepositoryBase<Microorganism>.GetAsync(Expression<Func<Microorganism, bool>>, Func<IQueryable<Microorganism>, IOrderedQueryable<Microorganism>>, List<Expression<Func<Microorganism, object>>>, bool)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.GetAsync(System.Linq.Expressions.Expression<System.Func<DB.Domain.Entities.Microorganism, bool>>, System.Func<System.Linq.IQueryable<DB.Domain.Entities.Microorganism>, System.Linq.IOrderedQueryable<DB.Domain.Entities.Microorganism>>, System.Collections.Generic.List<System.Linq.Expressions.Expression<System.Func<DB.Domain.Entities.Microorganism, object>>>, bool)
  nameWithType.vb: RepositoryBase(Of Microorganism).GetAsync(Expression(Of Func(Of Microorganism, Boolean)), Func(Of IQueryable(Of Microorganism), IOrderedQueryable(Of Microorganism)), List(Of Expression(Of Func(Of Microorganism, Object))), Boolean)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).GetAsync(System.Linq.Expressions.Expression(Of System.Func(Of DB.Domain.Entities.Microorganism, Boolean)), System.Func(Of System.Linq.IQueryable(Of DB.Domain.Entities.Microorganism), System.Linq.IOrderedQueryable(Of DB.Domain.Entities.Microorganism)), System.Collections.Generic.List(Of System.Linq.Expressions.Expression(Of System.Func(Of DB.Domain.Entities.Microorganism, Object))), Boolean)
  name.vb: GetAsync(Expression(Of Func(Of Microorganism, Boolean)), Func(Of IQueryable(Of Microorganism), IOrderedQueryable(Of Microorganism)), List(Of Expression(Of Func(Of Microorganism, Object))), Boolean)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Object}}},System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_Collections_Generic_List_System_Linq_Expressions_Expression_System_Func__0_System_Object____System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetAsync(System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Boolean}},System.Func{System.Linq.IQueryable{DB.Domain.Entities.Microorganism},System.Linq.IOrderedQueryable{DB.Domain.Entities.Microorganism}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{DB.Domain.Entities.Microorganism,System.Object}}},System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_Collections_Generic_List_System_Linq_Expressions_Expression_System_Func__0_System_Object____System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetByIdAsync(System.Int32)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetByIdAsync(System.Int32)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.GetByIdAsync(System.Int32)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: RepositoryBase<Microorganism>.GetByIdAsync(int)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.GetByIdAsync(int)
  nameWithType.vb: RepositoryBase(Of Microorganism).GetByIdAsync(Integer)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.AddAsync(DB.Domain.Entities.Microorganism)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.AddAsync(DB.Domain.Entities.Microorganism)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.AddAsync(`0)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_AddAsync__0_
  name: AddAsync(Microorganism)
  nameWithType: RepositoryBase<Microorganism>.AddAsync(Microorganism)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.AddAsync(DB.Domain.Entities.Microorganism)
  nameWithType.vb: RepositoryBase(Of Microorganism).AddAsync(Microorganism)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).AddAsync(DB.Domain.Entities.Microorganism)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.AddAsync(DB.Domain.Entities.Microorganism)
    name: AddAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_AddAsync__0_
  - name: (
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.AddAsync(DB.Domain.Entities.Microorganism)
    name: AddAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_AddAsync__0_
  - name: (
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.UpdateAsync(DB.Domain.Entities.Microorganism)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.UpdateAsync(DB.Domain.Entities.Microorganism)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.UpdateAsync(`0)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_UpdateAsync__0_
  name: UpdateAsync(Microorganism)
  nameWithType: RepositoryBase<Microorganism>.UpdateAsync(Microorganism)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.UpdateAsync(DB.Domain.Entities.Microorganism)
  nameWithType.vb: RepositoryBase(Of Microorganism).UpdateAsync(Microorganism)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).UpdateAsync(DB.Domain.Entities.Microorganism)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.UpdateAsync(DB.Domain.Entities.Microorganism)
    name: UpdateAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_UpdateAsync__0_
  - name: (
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.UpdateAsync(DB.Domain.Entities.Microorganism)
    name: UpdateAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_UpdateAsync__0_
  - name: (
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.DeleteAsync(DB.Domain.Entities.Microorganism)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.DeleteAsync(DB.Domain.Entities.Microorganism)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.DeleteAsync(`0)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_DeleteAsync__0_
  name: DeleteAsync(Microorganism)
  nameWithType: RepositoryBase<Microorganism>.DeleteAsync(Microorganism)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.DeleteAsync(DB.Domain.Entities.Microorganism)
  nameWithType.vb: RepositoryBase(Of Microorganism).DeleteAsync(Microorganism)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).DeleteAsync(DB.Domain.Entities.Microorganism)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.DeleteAsync(DB.Domain.Entities.Microorganism)
    name: DeleteAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_DeleteAsync__0_
  - name: (
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.DeleteAsync(DB.Domain.Entities.Microorganism)
    name: DeleteAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_DeleteAsync__0_
  - name: (
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetQueryable(System.Boolean)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetQueryable(System.Boolean)
  parent: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}
  definition: DB.Infrastructure.Repositories.RepositoryBase`1.GetQueryable(System.Boolean)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetQueryable_System_Boolean_
  name: GetQueryable(bool)
  nameWithType: RepositoryBase<Microorganism>.GetQueryable(bool)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<DB.Domain.Entities.Microorganism>.GetQueryable(bool)
  nameWithType.vb: RepositoryBase(Of Microorganism).GetQueryable(Boolean)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of DB.Domain.Entities.Microorganism).GetQueryable(Boolean)
  name.vb: GetQueryable(Boolean)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetQueryable(System.Boolean)
    name: GetQueryable
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetQueryable_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase{DB.Domain.Entities.Microorganism}.GetQueryable(System.Boolean)
    name: GetQueryable
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetQueryable_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DB.Infrastructure.Repositories.RepositoryBase`1
  commentId: T:DB.Infrastructure.Repositories.RepositoryBase`1
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html
  name: RepositoryBase<T>
  nameWithType: RepositoryBase<T>
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>
  nameWithType.vb: RepositoryBase(Of T)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T)
  name.vb: RepositoryBase(Of T)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1
    name: RepositoryBase
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1
    name: RepositoryBase
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DB.Application.Contracts.Persistance
  commentId: N:DB.Application.Contracts.Persistance
  href: DB.html
  name: DB.Application.Contracts.Persistance
  nameWithType: DB.Application.Contracts.Persistance
  fullName: DB.Application.Contracts.Persistance
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Persistance
    name: Persistance
    href: DB.Application.Contracts.Persistance.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Persistance
    name: Persistance
    href: DB.Application.Contracts.Persistance.html
- uid: DB.Application.Contracts.Persistance.IAsyncRepository`1
  commentId: T:DB.Application.Contracts.Persistance.IAsyncRepository`1
  href: DB.Application.Contracts.Persistance.IAsyncRepository-1.html
  name: IAsyncRepository<T>
  nameWithType: IAsyncRepository<T>
  fullName: DB.Application.Contracts.Persistance.IAsyncRepository<T>
  nameWithType.vb: IAsyncRepository(Of T)
  fullName.vb: DB.Application.Contracts.Persistance.IAsyncRepository(Of T)
  name.vb: IAsyncRepository(Of T)
  spec.csharp:
  - uid: DB.Application.Contracts.Persistance.IAsyncRepository`1
    name: IAsyncRepository
    href: DB.Application.Contracts.Persistance.IAsyncRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DB.Application.Contracts.Persistance.IAsyncRepository`1
    name: IAsyncRepository
    href: DB.Application.Contracts.Persistance.IAsyncRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1._dbContext
  commentId: F:DB.Infrastructure.Repositories.RepositoryBase`1._dbContext
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1__dbContext
  name: _dbContext
  nameWithType: RepositoryBase<T>._dbContext
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>._dbContext
  nameWithType.vb: RepositoryBase(Of T)._dbContext
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T)._dbContext
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAllAsync
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.GetAllAsync
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: RepositoryBase<T>.GetAllAsync()
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.GetAllAsync()
  nameWithType.vb: RepositoryBase(Of T).GetAllAsync()
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).GetAllAsync()
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAllAsync
    name: GetAllAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAllAsync
    name: GetAllAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAllAsync
  - name: (
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  name: GetAsync(Expression<Func<T, bool>>)
  nameWithType: RepositoryBase<T>.GetAsync(Expression<Func<T, bool>>)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.GetAsync(System.Linq.Expressions.Expression<System.Func<T, bool>>)
  nameWithType.vb: RepositoryBase(Of T).GetAsync(Expression(Of Func(Of T, Boolean)))
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).GetAsync(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)))
  name.vb: GetAsync(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Boolean)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Boolean)
  isExternal: true
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_System_Boolean_
  name: GetAsync(Expression<Func<T, bool>>, Func<IQueryable<T>, IOrderedQueryable<T>>, string, bool)
  nameWithType: RepositoryBase<T>.GetAsync(Expression<Func<T, bool>>, Func<IQueryable<T>, IOrderedQueryable<T>>, string, bool)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.GetAsync(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Func<System.Linq.IQueryable<T>, System.Linq.IOrderedQueryable<T>>, string, bool)
  nameWithType.vb: RepositoryBase(Of T).GetAsync(Expression(Of Func(Of T, Boolean)), Func(Of IQueryable(Of T), IOrderedQueryable(Of T)), String, Boolean)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).GetAsync(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Func(Of System.Linq.IQueryable(Of T), System.Linq.IOrderedQueryable(Of T)), String, Boolean)
  name.vb: GetAsync(Expression(Of Func(Of T, Boolean)), Func(Of IQueryable(Of T), IOrderedQueryable(Of T)), String, Boolean)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_String_System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{`0,System.Object}}},System.Boolean)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{`0,System.Object}}},System.Boolean)
  isExternal: true
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_Collections_Generic_List_System_Linq_Expressions_Expression_System_Func__0_System_Object____System_Boolean_
  name: GetAsync(Expression<Func<T, bool>>, Func<IQueryable<T>, IOrderedQueryable<T>>, List<Expression<Func<T, object>>>, bool)
  nameWithType: RepositoryBase<T>.GetAsync(Expression<Func<T, bool>>, Func<IQueryable<T>, IOrderedQueryable<T>>, List<Expression<Func<T, object>>>, bool)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.GetAsync(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Func<System.Linq.IQueryable<T>, System.Linq.IOrderedQueryable<T>>, System.Collections.Generic.List<System.Linq.Expressions.Expression<System.Func<T, object>>>, bool)
  nameWithType.vb: RepositoryBase(Of T).GetAsync(Expression(Of Func(Of T, Boolean)), Func(Of IQueryable(Of T), IOrderedQueryable(Of T)), List(Of Expression(Of Func(Of T, Object))), Boolean)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).GetAsync(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Func(Of System.Linq.IQueryable(Of T), System.Linq.IOrderedQueryable(Of T)), System.Collections.Generic.List(Of System.Linq.Expressions.Expression(Of System.Func(Of T, Object))), Boolean)
  name.vb: GetAsync(Expression(Of Func(Of T, Boolean)), Func(Of IQueryable(Of T), IOrderedQueryable(Of T)), List(Of Expression(Of Func(Of T, Object))), Boolean)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{`0,System.Object}}},System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_Collections_Generic_List_System_Linq_Expressions_Expression_System_Func__0_System_Object____System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{`0,System.Object}}},System.Boolean)
    name: GetAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetAsync_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Func_System_Linq_IQueryable__0__System_Linq_IOrderedQueryable__0___System_Collections_Generic_List_System_Linq_Expressions_Expression_System_Func__0_System_Object____System_Boolean_
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.IOrderedQueryable`1
    name: IOrderedQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iorderedqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetByIdAsync(System.Int32)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.GetByIdAsync(System.Int32)
  isExternal: true
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: RepositoryBase<T>.GetByIdAsync(int)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.GetByIdAsync(int)
  nameWithType.vb: RepositoryBase(Of T).GetByIdAsync(Integer)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.AddAsync(`0)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.AddAsync(`0)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_AddAsync__0_
  name: AddAsync(T)
  nameWithType: RepositoryBase<T>.AddAsync(T)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.AddAsync(T)
  nameWithType.vb: RepositoryBase(Of T).AddAsync(T)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).AddAsync(T)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.AddAsync(`0)
    name: AddAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.AddAsync(`0)
    name: AddAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.UpdateAsync(`0)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.UpdateAsync(`0)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_UpdateAsync__0_
  name: UpdateAsync(T)
  nameWithType: RepositoryBase<T>.UpdateAsync(T)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.UpdateAsync(T)
  nameWithType.vb: RepositoryBase(Of T).UpdateAsync(T)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).UpdateAsync(T)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.UpdateAsync(`0)
    name: UpdateAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_UpdateAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.UpdateAsync(`0)
    name: UpdateAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_UpdateAsync__0_
  - name: (
  - name: T
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.DeleteAsync(`0)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.DeleteAsync(`0)
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_DeleteAsync__0_
  name: DeleteAsync(T)
  nameWithType: RepositoryBase<T>.DeleteAsync(T)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.DeleteAsync(T)
  nameWithType.vb: RepositoryBase(Of T).DeleteAsync(T)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).DeleteAsync(T)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.DeleteAsync(`0)
    name: DeleteAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_DeleteAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.DeleteAsync(`0)
    name: DeleteAsync
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_DeleteAsync__0_
  - name: (
  - name: T
  - name: )
- uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetQueryable(System.Boolean)
  commentId: M:DB.Infrastructure.Repositories.RepositoryBase`1.GetQueryable(System.Boolean)
  isExternal: true
  href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetQueryable_System_Boolean_
  name: GetQueryable(bool)
  nameWithType: RepositoryBase<T>.GetQueryable(bool)
  fullName: DB.Infrastructure.Repositories.RepositoryBase<T>.GetQueryable(bool)
  nameWithType.vb: RepositoryBase(Of T).GetQueryable(Boolean)
  fullName.vb: DB.Infrastructure.Repositories.RepositoryBase(Of T).GetQueryable(Boolean)
  name.vb: GetQueryable(Boolean)
  spec.csharp:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetQueryable(System.Boolean)
    name: GetQueryable
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetQueryable_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: DB.Infrastructure.Repositories.RepositoryBase`1.GetQueryable(System.Boolean)
    name: GetQueryable
    href: DB.Infrastructure.Repositories.RepositoryBase-1.html#DB_Infrastructure_Repositories_RepositoryBase_1_GetQueryable_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: DB.Infrastructure.Repositories.MicroorganismRepository.#ctor*
  commentId: Overload:DB.Infrastructure.Repositories.MicroorganismRepository.#ctor
  href: DB.Infrastructure.Repositories.MicroorganismRepository.html#DB_Infrastructure_Repositories_MicroorganismRepository__ctor_DB_Infrastructure_Persistance_SqlServerContext_
  name: MicroorganismRepository
  nameWithType: MicroorganismRepository.MicroorganismRepository
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository.MicroorganismRepository
  nameWithType.vb: MicroorganismRepository.New
  fullName.vb: DB.Infrastructure.Repositories.MicroorganismRepository.New
  name.vb: New
- uid: DB.Infrastructure.Persistance.SqlServerContext
  commentId: T:DB.Infrastructure.Persistance.SqlServerContext
  parent: DB.Infrastructure.Persistance
  href: DB.Infrastructure.Persistance.SqlServerContext.html
  name: SqlServerContext
  nameWithType: SqlServerContext
  fullName: DB.Infrastructure.Persistance.SqlServerContext
- uid: DB.Infrastructure.Persistance
  commentId: N:DB.Infrastructure.Persistance
  href: DB.html
  name: DB.Infrastructure.Persistance
  nameWithType: DB.Infrastructure.Persistance
  fullName: DB.Infrastructure.Persistance
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Infrastructure
    name: Infrastructure
    href: DB.Infrastructure.html
  - name: .
  - uid: DB.Infrastructure.Persistance
    name: Persistance
    href: DB.Infrastructure.Persistance.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Infrastructure
    name: Infrastructure
    href: DB.Infrastructure.html
  - name: .
  - uid: DB.Infrastructure.Persistance
    name: Persistance
    href: DB.Infrastructure.Persistance.html
- uid: DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync*
  commentId: Overload:DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync
  href: DB.Infrastructure.Repositories.MicroorganismRepository.html#DB_Infrastructure_Repositories_MicroorganismRepository_GetByNameAsync_System_String_
  name: GetByNameAsync
  nameWithType: MicroorganismRepository.GetByNameAsync
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository.GetByNameAsync
- uid: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(System.String)
  commentId: M:DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(System.String)
  parent: DB.Application.Contracts.Persistance.IMicroorganismRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetByNameAsync(string)
  nameWithType: IMicroorganismRepository.GetByNameAsync(string)
  fullName: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(string)
  nameWithType.vb: IMicroorganismRepository.GetByNameAsync(String)
  fullName.vb: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(String)
  name.vb: GetByNameAsync(String)
  spec.csharp:
  - uid: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(System.String)
    name: GetByNameAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetByNameAsync(System.String)
    name: GetByNameAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{DB.Domain.Entities.Microorganism}
  commentId: T:System.Threading.Tasks.Task{DB.Domain.Entities.Microorganism}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Microorganism>
  nameWithType: Task<Microorganism>
  fullName: System.Threading.Tasks.Task<DB.Domain.Entities.Microorganism>
  nameWithType.vb: Task(Of Microorganism)
  fullName.vb: System.Threading.Tasks.Task(Of DB.Domain.Entities.Microorganism)
  name.vb: Task(Of Microorganism)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName*
  commentId: Overload:DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName
  href: DB.Infrastructure.Repositories.MicroorganismRepository.html#DB_Infrastructure_Repositories_MicroorganismRepository_GetMicroorganismByName_System_String_
  name: GetMicroorganismByName
  nameWithType: MicroorganismRepository.GetMicroorganismByName
  fullName: DB.Infrastructure.Repositories.MicroorganismRepository.GetMicroorganismByName
- uid: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(System.String)
  commentId: M:DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(System.String)
  parent: DB.Application.Contracts.Persistance.IMicroorganismRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetMicroorganismByName(string)
  nameWithType: IMicroorganismRepository.GetMicroorganismByName(string)
  fullName: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(string)
  nameWithType.vb: IMicroorganismRepository.GetMicroorganismByName(String)
  fullName.vb: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(String)
  name.vb: GetMicroorganismByName(String)
  spec.csharp:
  - uid: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(System.String)
    name: GetMicroorganismByName
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DB.Application.Contracts.Persistance.IMicroorganismRepository.GetMicroorganismByName(System.String)
    name: GetMicroorganismByName
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Domain.Entities.Microorganism}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Domain.Entities.Microorganism}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyCollection<Microorganism>>
  nameWithType: Task<IReadOnlyCollection<Microorganism>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<DB.Domain.Entities.Microorganism>>
  nameWithType.vb: Task(Of IReadOnlyCollection(Of Microorganism))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyCollection(Of DB.Domain.Entities.Microorganism))
  name.vb: Task(Of IReadOnlyCollection(Of Microorganism))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Domain.Entities.Microorganism
    name: Microorganism
  - name: )
  - name: )
