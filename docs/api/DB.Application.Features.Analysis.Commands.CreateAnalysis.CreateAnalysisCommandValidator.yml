### YamlMime:ManagedReference
items:
- uid: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator
  commentId: T:DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator
  id: CreateAnalysisCommandValidator
  parent: DB.Application.Features.Analysis.Commands.CreateAnalysis
  children:
  - DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.#ctor
  langs:
  - csharp
  - vb
  name: CreateAnalysisCommandValidator
  nameWithType: CreateAnalysisCommandValidator
  fullName: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator
  type: Class
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Analysis/Commands/CreateAnalysis/CreateAnalysisCommandValidator.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: CreateAnalysisCommandValidator
    path: ../SciConnect/Services/DB/DB.Application/Features/Analysis/Commands/CreateAnalysis/CreateAnalysisCommandValidator.cs
    startLine: 10
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Analysis.Commands.CreateAnalysis
  syntax:
    content: 'public class CreateAnalysisCommandValidator : AbstractValidator<CreateAnalysisCommand>, IValidator<CreateAnalysisCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable'
    content.vb: Public Class CreateAnalysisCommandValidator Inherits AbstractValidator(Of CreateAnalysisCommand) Implements IValidator(Of CreateAnalysisCommand), IValidator, IEnumerable(Of IValidationRule), IEnumerable
  inheritance:
  - System.Object
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  implements:
  - FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  - FluentValidation.IValidator
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  - System.Collections.IEnumerable
  inheritedMembers:
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CreateDescriptor
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty}}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty}}},System.Func{{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{{TElement}}}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleSet(System.String,System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include(FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include``1(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TValidator}})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.GetEnumerator
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.EnsureInstanceNotNull(System.Object)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.PreValidate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RaiseValidationException(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.OnRuleAdded(FluentValidation.IValidationRule{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CascadeMode
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ClassLevelCascadeMode
  - FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleLevelCascadeMode
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.#ctor
  commentId: M:DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.#ctor
  id: '#ctor'
  parent: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator
  langs:
  - csharp
  - vb
  name: CreateAnalysisCommandValidator()
  nameWithType: CreateAnalysisCommandValidator.CreateAnalysisCommandValidator()
  fullName: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.CreateAnalysisCommandValidator()
  type: Constructor
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Analysis/Commands/CreateAnalysis/CreateAnalysisCommandValidator.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: .ctor
    path: ../SciConnect/Services/DB/DB.Application/Features/Analysis/Commands/CreateAnalysis/CreateAnalysisCommandValidator.cs
    startLine: 12
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Analysis.Commands.CreateAnalysis
  syntax:
    content: public CreateAnalysisCommandValidator()
    content.vb: Public Sub New()
  overload: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.#ctor*
  nameWithType.vb: CreateAnalysisCommandValidator.New()
  fullName.vb: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.New()
  name.vb: New()
references:
- uid: DB.Application.Features.Analysis.Commands.CreateAnalysis
  commentId: N:DB.Application.Features.Analysis.Commands.CreateAnalysis
  href: DB.html
  name: DB.Application.Features.Analysis.Commands.CreateAnalysis
  nameWithType: DB.Application.Features.Analysis.Commands.CreateAnalysis
  fullName: DB.Application.Features.Analysis.Commands.CreateAnalysis
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Analysis
    name: Analysis
    href: DB.Application.Features.Analysis.html
  - name: .
  - uid: DB.Application.Features.Analysis.Commands
    name: Commands
    href: DB.Application.Features.Analysis.Commands.html
  - name: .
  - uid: DB.Application.Features.Analysis.Commands.CreateAnalysis
    name: CreateAnalysis
    href: DB.Application.Features.Analysis.Commands.CreateAnalysis.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Analysis
    name: Analysis
    href: DB.Application.Features.Analysis.html
  - name: .
  - uid: DB.Application.Features.Analysis.Commands
    name: Commands
    href: DB.Application.Features.Analysis.Commands.html
  - name: .
  - uid: DB.Application.Features.Analysis.Commands.CreateAnalysis
    name: CreateAnalysis
    href: DB.Application.Features.Analysis.Commands.CreateAnalysis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  commentId: T:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  parent: FluentValidation
  definition: FluentValidation.AbstractValidator`1
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: AbstractValidator<CreateAnalysisCommand>
  nameWithType: AbstractValidator<CreateAnalysisCommand>
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  name.vb: AbstractValidator(Of CreateAnalysisCommand)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
- uid: FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  commentId: T:FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  parent: FluentValidation
  definition: FluentValidation.IValidator`1
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: IValidator<CreateAnalysisCommand>
  nameWithType: IValidator<CreateAnalysisCommand>
  fullName: FluentValidation.IValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>
  nameWithType.vb: IValidator(Of CreateAnalysisCommand)
  fullName.vb: FluentValidation.IValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  name.vb: IValidator(Of CreateAnalysisCommand)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
- uid: FluentValidation.IValidator
  commentId: T:FluentValidation.IValidator
  parent: FluentValidation
  isExternal: true
  name: IValidator
  nameWithType: IValidator
  fullName: FluentValidation.IValidator
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  commentId: T:System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IValidationRule>
  nameWithType: IEnumerable<IValidationRule>
  fullName: System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>
  nameWithType.vb: IEnumerable(Of IValidationRule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule)
  name.vb: IEnumerable(Of IValidationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Validate(`0)
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: Validate(CreateAnalysisCommand)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Validate(CreateAnalysisCommand)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Validate(CreateAnalysisCommand)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
    name: Validate
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand)
    name: Validate
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: ValidateAsync(CreateAnalysisCommand, CancellationToken)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.ValidateAsync(CreateAnalysisCommand, CancellationToken)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).ValidateAsync(CreateAnalysisCommand, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: Validate(ValidationContext<CreateAnalysisCommand>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Validate(ValidationContext<CreateAnalysisCommand>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Validate(FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Validate(ValidationContext(Of CreateAnalysisCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Validate(FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand))
  name.vb: Validate(ValidationContext(Of CreateAnalysisCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Validate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: ValidateAsync(ValidationContext<CreateAnalysisCommand>, CancellationToken)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.ValidateAsync(ValidationContext<CreateAnalysisCommand>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.ValidateAsync(FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).ValidateAsync(ValidationContext(Of CreateAnalysisCommand), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).ValidateAsync(FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of CreateAnalysisCommand), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ValidateAsync(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CreateDescriptor
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<CreateAnalysisCommand>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty}}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<CreateAnalysisCommand, TProperty>>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.RuleFor<TProperty>(Expression<Func<CreateAnalysisCommand, TProperty>>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty>>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).RuleFor(Of TProperty)(Expression(Of Func(Of CreateAnalysisCommand, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of CreateAnalysisCommand, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty}}},System.Func{{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<CreateAnalysisCommand, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateAnalysisCommand, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0,``1})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<CreateAnalysisCommand, TProperty>>, Func<CreateAnalysisCommand, TProperty, TTransformed>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateAnalysisCommand, TProperty>>, Func<CreateAnalysisCommand, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty>>, System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, TProperty)), Func(Of CreateAnalysisCommand, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty)), System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, TProperty)), Func(Of CreateAnalysisCommand, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{{TElement}}}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<CreateAnalysisCommand, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.RuleForEach<TElement>(Expression<Func<CreateAnalysisCommand, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).RuleForEach(Of TElement)(Expression(Of Func(Of CreateAnalysisCommand, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of CreateAnalysisCommand, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<CreateAnalysisCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateAnalysisCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0,``1})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<CreateAnalysisCommand, IEnumerable<TElement>>>, Func<CreateAnalysisCommand, TElement, TTransformed>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateAnalysisCommand, IEnumerable<TElement>>>, Func<CreateAnalysisCommand, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, IEnumerable(Of TElement))), Func(Of CreateAnalysisCommand, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateAnalysisCommand, IEnumerable(Of TElement))), Func(Of CreateAnalysisCommand, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleSet(System.String,System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<CreateAnalysisCommand, bool>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.When(Func<CreateAnalysisCommand, bool>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.When(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).When(Func(Of CreateAnalysisCommand, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).When(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, Boolean), System.Action)
  name.vb: When(Func(Of CreateAnalysisCommand, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, bool>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.When(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.When(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).When(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).When(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), Boolean), System.Action)
  name.vb: When(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.When(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<CreateAnalysisCommand, bool>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Unless(Func<CreateAnalysisCommand, bool>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Unless(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Unless(Func(Of CreateAnalysisCommand, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Unless(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, Boolean), System.Action)
  name.vb: Unless(Func(Of CreateAnalysisCommand, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, bool>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Unless(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Unless(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Unless(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Unless(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), Boolean), System.Action)
  name.vb: Unless(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Unless(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<CreateAnalysisCommand, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.WhenAsync(Func<CreateAnalysisCommand, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.WhenAsync(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).WhenAsync(Func(Of CreateAnalysisCommand, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).WhenAsync(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of CreateAnalysisCommand, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.WhenAsync(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.WhenAsync(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).WhenAsync(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).WhenAsync(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.WhenAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<CreateAnalysisCommand, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.UnlessAsync(Func<CreateAnalysisCommand, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.UnlessAsync(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).UnlessAsync(Func(Of CreateAnalysisCommand, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).UnlessAsync(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of CreateAnalysisCommand, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.UnlessAsync(Func<CreateAnalysisCommand, ValidationContext<CreateAnalysisCommand>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.UnlessAsync(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).UnlessAsync(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).UnlessAsync(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of CreateAnalysisCommand, ValidationContext(Of CreateAnalysisCommand), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.UnlessAsync(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include(FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include(FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: Include(IValidator<CreateAnalysisCommand>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Include(IValidator<CreateAnalysisCommand>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Include(FluentValidation.IValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Include(IValidator(Of CreateAnalysisCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Include(FluentValidation.IValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand))
  name.vb: Include(IValidator(Of CreateAnalysisCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include(FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include(FluentValidation.IValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include``1(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,{TValidator}})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include``1(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<CreateAnalysisCommand, TValidator>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.Include<TValidator>(Func<CreateAnalysisCommand, TValidator>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.Include<TValidator>(System.Func<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TValidator>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).Include(Of TValidator)(Func(Of CreateAnalysisCommand, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).Include(Of TValidator)(System.Func(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand, TValidator))
  name.vb: Include(Of TValidator)(Func(Of CreateAnalysisCommand, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include``1(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.Include``1(System.Func{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.GetEnumerator
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<CreateAnalysisCommand>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.EnsureInstanceNotNull(System.Object)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.PreValidate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.PreValidate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: PreValidate(ValidationContext<CreateAnalysisCommand>, ValidationResult)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.PreValidate(ValidationContext<CreateAnalysisCommand>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.PreValidate(FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).PreValidate(ValidationContext(Of CreateAnalysisCommand), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).PreValidate(FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of CreateAnalysisCommand), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.PreValidate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.PreValidate(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RaiseValidationException(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RaiseValidationException(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: RaiseValidationException(ValidationContext<CreateAnalysisCommand>, ValidationResult)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.RaiseValidationException(ValidationContext<CreateAnalysisCommand>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.RaiseValidationException(FluentValidation.ValidationContext<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).RaiseValidationException(ValidationContext(Of CreateAnalysisCommand), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).RaiseValidationException(FluentValidation.ValidationContext(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of CreateAnalysisCommand), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RaiseValidationException(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RaiseValidationException(FluentValidation.ValidationContext{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.OnRuleAdded(FluentValidation.IValidationRule{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  commentId: M:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.OnRuleAdded(FluentValidation.IValidationRule{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  name: OnRuleAdded(IValidationRule<CreateAnalysisCommand>)
  nameWithType: AbstractValidator<CreateAnalysisCommand>.OnRuleAdded(IValidationRule<CreateAnalysisCommand>)
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.OnRuleAdded(FluentValidation.IValidationRule<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>)
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).OnRuleAdded(IValidationRule(Of CreateAnalysisCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).OnRuleAdded(FluentValidation.IValidationRule(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand))
  name.vb: OnRuleAdded(IValidationRule(Of CreateAnalysisCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.OnRuleAdded(FluentValidation.IValidationRule{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.OnRuleAdded(FluentValidation.IValidationRule{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand
    name: CreateAnalysisCommand
    href: DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CascadeMode
  commentId: P:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.CascadeMode
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.CascadeMode
  name: CascadeMode
  nameWithType: AbstractValidator<CreateAnalysisCommand>.CascadeMode
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.CascadeMode
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).CascadeMode
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.ClassLevelCascadeMode
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<CreateAnalysisCommand>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}.RuleLevelCascadeMode
  parent: FluentValidation.AbstractValidator{DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand}
  definition: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<CreateAnalysisCommand>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of CreateAnalysisCommand).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of DB.Application.Features.Analyses.Commands.CreateAnalysis.CreateAnalysisCommand).RuleLevelCascadeMode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FluentValidation.AbstractValidator`1
  commentId: T:FluentValidation.AbstractValidator`1
  isExternal: true
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FluentValidation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FluentValidation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: FluentValidation.IValidator`1
  commentId: T:FluentValidation.IValidator`1
  isExternal: true
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FluentValidation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FluentValidation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: FluentValidation.AbstractValidator`1.Validate(`0)
  commentId: M:FluentValidation.AbstractValidator`1.Validate(`0)
  isExternal: true
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FluentValidation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  isExternal: true
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FluentValidation.AbstractValidator<T>.Validate(FluentValidation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(FluentValidation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(FluentValidation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator`1.CreateDescriptor
  isExternal: true
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<T, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of T, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<T, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of T, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<T>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<T>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  isExternal: true
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FluentValidation.AbstractValidator<T>.Include(FluentValidation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(FluentValidation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  commentId: M:FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FluentValidation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<T>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<T>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.PreValidate(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).PreValidate(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.RaiseValidationException(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RaiseValidationException(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  commentId: M:FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  isExternal: true
  name: OnRuleAdded(IValidationRule<T>)
  nameWithType: AbstractValidator<T>.OnRuleAdded(IValidationRule<T>)
  fullName: FluentValidation.AbstractValidator<T>.OnRuleAdded(FluentValidation.IValidationRule<T>)
  nameWithType.vb: AbstractValidator(Of T).OnRuleAdded(IValidationRule(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).OnRuleAdded(FluentValidation.IValidationRule(Of T))
  name.vb: OnRuleAdded(IValidationRule(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.CascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.CascadeMode
  isExternal: true
  name: CascadeMode
  nameWithType: AbstractValidator<T>.CascadeMode
  fullName: FluentValidation.AbstractValidator<T>.CascadeMode
  nameWithType.vb: AbstractValidator(Of T).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).CascadeMode
- uid: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  isExternal: true
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<T>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  isExternal: true
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<T>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleLevelCascadeMode
- uid: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.#ctor*
  commentId: Overload:DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.#ctor
  href: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.html#DB_Application_Features_Analysis_Commands_CreateAnalysis_CreateAnalysisCommandValidator__ctor
  name: CreateAnalysisCommandValidator
  nameWithType: CreateAnalysisCommandValidator.CreateAnalysisCommandValidator
  fullName: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.CreateAnalysisCommandValidator
  nameWithType.vb: CreateAnalysisCommandValidator.New
  fullName.vb: DB.Application.Features.Analysis.Commands.CreateAnalysis.CreateAnalysisCommandValidator.New
  name.vb: New
