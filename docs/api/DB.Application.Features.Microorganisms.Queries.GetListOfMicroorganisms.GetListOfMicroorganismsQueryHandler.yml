### YamlMime:ManagedReference
items:
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler
  commentId: T:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler
  id: GetListOfMicroorganismsQueryHandler
  parent: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  children:
  - DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.#ctor(DB.Application.Contracts.Persistance.IMicroorganismRepository,DB.Application.Contracts.Factories.IMicroorganismViewModelFactory)
  - DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: GetListOfMicroorganismsQueryHandler
  nameWithType: GetListOfMicroorganismsQueryHandler
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler
  type: Class
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Microorganisms/Queries/GetListOfMicroorganisms/GetListOfMicroorganismsQueryHandler.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: GetListOfMicroorganismsQueryHandler
    path: ../SciConnect/Services/DB/DB.Application/Features/Microorganisms/Queries/GetListOfMicroorganisms/GetListOfMicroorganismsQueryHandler.cs
    startLine: 14
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  syntax:
    content: 'public class GetListOfMicroorganismsQueryHandler : IRequestHandler<GetListOfMicroorganismsQuery, IReadOnlyCollection<MicroorganismViewModel>>'
    content.vb: Public Class GetListOfMicroorganismsQueryHandler Implements IRequestHandler(Of GetListOfMicroorganismsQuery, IReadOnlyCollection(Of MicroorganismViewModel))
  inheritance:
  - System.Object
  implements:
  - MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.#ctor(DB.Application.Contracts.Persistance.IMicroorganismRepository,DB.Application.Contracts.Factories.IMicroorganismViewModelFactory)
  commentId: M:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.#ctor(DB.Application.Contracts.Persistance.IMicroorganismRepository,DB.Application.Contracts.Factories.IMicroorganismViewModelFactory)
  id: '#ctor(DB.Application.Contracts.Persistance.IMicroorganismRepository,DB.Application.Contracts.Factories.IMicroorganismViewModelFactory)'
  parent: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler
  langs:
  - csharp
  - vb
  name: GetListOfMicroorganismsQueryHandler(IMicroorganismRepository, IMicroorganismViewModelFactory)
  nameWithType: GetListOfMicroorganismsQueryHandler.GetListOfMicroorganismsQueryHandler(IMicroorganismRepository, IMicroorganismViewModelFactory)
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.GetListOfMicroorganismsQueryHandler(DB.Application.Contracts.Persistance.IMicroorganismRepository, DB.Application.Contracts.Factories.IMicroorganismViewModelFactory)
  type: Constructor
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Microorganisms/Queries/GetListOfMicroorganisms/GetListOfMicroorganismsQueryHandler.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: .ctor
    path: ../SciConnect/Services/DB/DB.Application/Features/Microorganisms/Queries/GetListOfMicroorganisms/GetListOfMicroorganismsQueryHandler.cs
    startLine: 19
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  syntax:
    content: public GetListOfMicroorganismsQueryHandler(IMicroorganismRepository microorganismRepository, IMicroorganismViewModelFactory viewModelFactory)
    parameters:
    - id: microorganismRepository
      type: DB.Application.Contracts.Persistance.IMicroorganismRepository
    - id: viewModelFactory
      type: DB.Application.Contracts.Factories.IMicroorganismViewModelFactory
    content.vb: Public Sub New(microorganismRepository As IMicroorganismRepository, viewModelFactory As IMicroorganismViewModelFactory)
  overload: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.#ctor*
  nameWithType.vb: GetListOfMicroorganismsQueryHandler.New(IMicroorganismRepository, IMicroorganismViewModelFactory)
  fullName.vb: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.New(DB.Application.Contracts.Persistance.IMicroorganismRepository, DB.Application.Contracts.Factories.IMicroorganismViewModelFactory)
  name.vb: New(IMicroorganismRepository, IMicroorganismViewModelFactory)
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
  commentId: M:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
  id: Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
  parent: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler
  langs:
  - csharp
  - vb
  name: Handle(GetListOfMicroorganismsQuery, CancellationToken)
  nameWithType: GetListOfMicroorganismsQueryHandler.Handle(GetListOfMicroorganismsQuery, CancellationToken)
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Microorganisms/Queries/GetListOfMicroorganisms/GetListOfMicroorganismsQueryHandler.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: Handle
    path: ../SciConnect/Services/DB/DB.Application/Features/Microorganisms/Queries/GetListOfMicroorganisms/GetListOfMicroorganismsQueryHandler.cs
    startLine: 28
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  summary: Handles a request
  example: []
  syntax:
    content: public Task<IReadOnlyCollection<MicroorganismViewModel>> Handle(GetListOfMicroorganismsQuery request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
      description: The request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
      description: Response from the request
    content.vb: Public Function Handle(request As GetListOfMicroorganismsQuery, cancellationToken As CancellationToken) As Task(Of IReadOnlyCollection(Of MicroorganismViewModel))
  overload: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle*
  implements:
  - MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
references:
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  commentId: N:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  href: DB.html
  name: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  nameWithType: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Microorganisms
    name: Microorganisms
    href: DB.Application.Features.Microorganisms.html
  - name: .
  - uid: DB.Application.Features.Microorganisms.Queries
    name: Queries
    href: DB.Application.Features.Microorganisms.Queries.html
  - name: .
  - uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
    name: GetListOfMicroorganisms
    href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Microorganisms
    name: Microorganisms
    href: DB.Application.Features.Microorganisms.html
  - name: .
  - uid: DB.Application.Features.Microorganisms.Queries
    name: Queries
    href: DB.Application.Features.Microorganisms.Queries.html
  - name: .
  - uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms
    name: GetListOfMicroorganisms
    href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
  commentId: T:MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  name: IRequestHandler<GetListOfMicroorganismsQuery, IReadOnlyCollection<MicroorganismViewModel>>
  nameWithType: IRequestHandler<GetListOfMicroorganismsQuery, IReadOnlyCollection<MicroorganismViewModel>>
  fullName: MediatR.IRequestHandler<DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Collections.Generic.IReadOnlyCollection<DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel>>
  nameWithType.vb: IRequestHandler(Of GetListOfMicroorganismsQuery, IReadOnlyCollection(Of MicroorganismViewModel))
  fullName.vb: MediatR.IRequestHandler(Of DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Collections.Generic.IReadOnlyCollection(Of DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel))
  name.vb: IRequestHandler(Of GetListOfMicroorganismsQuery, IReadOnlyCollection(Of MicroorganismViewModel))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
    name: GetListOfMicroorganismsQuery
    href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel
    name: MicroorganismViewModel
    href: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
    name: GetListOfMicroorganismsQuery
    href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel
    name: MicroorganismViewModel
    href: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel.html
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.#ctor*
  commentId: Overload:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.#ctor
  href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.html#DB_Application_Features_Microorganisms_Queries_GetListOfMicroorganisms_GetListOfMicroorganismsQueryHandler__ctor_DB_Application_Contracts_Persistance_IMicroorganismRepository_DB_Application_Contracts_Factories_IMicroorganismViewModelFactory_
  name: GetListOfMicroorganismsQueryHandler
  nameWithType: GetListOfMicroorganismsQueryHandler.GetListOfMicroorganismsQueryHandler
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.GetListOfMicroorganismsQueryHandler
  nameWithType.vb: GetListOfMicroorganismsQueryHandler.New
  fullName.vb: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.New
  name.vb: New
- uid: DB.Application.Contracts.Persistance.IMicroorganismRepository
  commentId: T:DB.Application.Contracts.Persistance.IMicroorganismRepository
  parent: DB.Application.Contracts.Persistance
  href: DB.Application.Contracts.Persistance.IMicroorganismRepository.html
  name: IMicroorganismRepository
  nameWithType: IMicroorganismRepository
  fullName: DB.Application.Contracts.Persistance.IMicroorganismRepository
- uid: DB.Application.Contracts.Factories.IMicroorganismViewModelFactory
  commentId: T:DB.Application.Contracts.Factories.IMicroorganismViewModelFactory
  parent: DB.Application.Contracts.Factories
  href: DB.Application.Contracts.Factories.IMicroorganismViewModelFactory.html
  name: IMicroorganismViewModelFactory
  nameWithType: IMicroorganismViewModelFactory
  fullName: DB.Application.Contracts.Factories.IMicroorganismViewModelFactory
- uid: DB.Application.Contracts.Persistance
  commentId: N:DB.Application.Contracts.Persistance
  href: DB.html
  name: DB.Application.Contracts.Persistance
  nameWithType: DB.Application.Contracts.Persistance
  fullName: DB.Application.Contracts.Persistance
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Persistance
    name: Persistance
    href: DB.Application.Contracts.Persistance.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Persistance
    name: Persistance
    href: DB.Application.Contracts.Persistance.html
- uid: DB.Application.Contracts.Factories
  commentId: N:DB.Application.Contracts.Factories
  href: DB.html
  name: DB.Application.Contracts.Factories
  nameWithType: DB.Application.Contracts.Factories
  fullName: DB.Application.Contracts.Factories
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Factories
    name: Factories
    href: DB.Application.Contracts.Factories.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Factories
    name: Factories
    href: DB.Application.Contracts.Factories.html
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle*
  commentId: Overload:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle
  href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.html#DB_Application_Features_Microorganisms_Queries_GetListOfMicroorganisms_GetListOfMicroorganismsQueryHandler_Handle_DB_Application_Features_Microorganisms_Queries_GetListOfMicroorganismsQuery_System_Threading_CancellationToken_
  name: Handle
  nameWithType: GetListOfMicroorganismsQueryHandler.Handle
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganisms.GetListOfMicroorganismsQueryHandler.Handle
- uid: MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  name: Handle(GetListOfMicroorganismsQuery, CancellationToken)
  nameWithType: IRequestHandler<GetListOfMicroorganismsQuery, IReadOnlyCollection<MicroorganismViewModel>>.Handle(GetListOfMicroorganismsQuery, CancellationToken)
  fullName: MediatR.IRequestHandler<DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Collections.Generic.IReadOnlyCollection<DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel>>.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of GetListOfMicroorganismsQuery, IReadOnlyCollection(Of MicroorganismViewModel)).Handle(GetListOfMicroorganismsQuery, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Collections.Generic.IReadOnlyCollection(Of DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel)).Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
    name: GetListOfMicroorganismsQuery
    href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler{DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}.Handle(DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
    name: GetListOfMicroorganismsQuery
    href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
  commentId: T:DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
  parent: DB.Application.Features.Microorganisms.Queries
  href: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery.html
  name: GetListOfMicroorganismsQuery
  nameWithType: GetListOfMicroorganismsQuery
  fullName: DB.Application.Features.Microorganisms.Queries.GetListOfMicroorganismsQuery
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyCollection<MicroorganismViewModel>>
  nameWithType: Task<IReadOnlyCollection<MicroorganismViewModel>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel>>
  nameWithType.vb: Task(Of IReadOnlyCollection(Of MicroorganismViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyCollection(Of DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel))
  name.vb: Task(Of IReadOnlyCollection(Of MicroorganismViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel
    name: MicroorganismViewModel
    href: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel
    name: MicroorganismViewModel
    href: DB.Application.Features.Microorganisms.Queries.ViewModels.MicroorganismViewModel.html
  - name: )
  - name: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: DB.Application.Features.Microorganisms.Queries
  commentId: N:DB.Application.Features.Microorganisms.Queries
  href: DB.html
  name: DB.Application.Features.Microorganisms.Queries
  nameWithType: DB.Application.Features.Microorganisms.Queries
  fullName: DB.Application.Features.Microorganisms.Queries
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Microorganisms
    name: Microorganisms
    href: DB.Application.Features.Microorganisms.html
  - name: .
  - uid: DB.Application.Features.Microorganisms.Queries
    name: Queries
    href: DB.Application.Features.Microorganisms.Queries.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Microorganisms
    name: Microorganisms
    href: DB.Application.Features.Microorganisms.html
  - name: .
  - uid: DB.Application.Features.Microorganisms.Queries
    name: Queries
    href: DB.Application.Features.Microorganisms.Queries.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
