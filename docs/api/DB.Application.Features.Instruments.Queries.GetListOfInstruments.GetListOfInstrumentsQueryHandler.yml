### YamlMime:ManagedReference
items:
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler
  commentId: T:DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler
  id: GetListOfInstrumentsQueryHandler
  parent: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  children:
  - DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.#ctor(DB.Application.Contracts.Persistance.IInstrumentRepository,DB.Application.Contracts.Factories.IInstrumentViewModelFactory)
  - DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: GetListOfInstrumentsQueryHandler
  nameWithType: GetListOfInstrumentsQueryHandler
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler
  type: Class
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Instruments/Queries/GetListOfInstruments/GetListOfInstrumentsQueryHandler.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: GetListOfInstrumentsQueryHandler
    path: ../SciConnect/Services/DB/DB.Application/Features/Instruments/Queries/GetListOfInstruments/GetListOfInstrumentsQueryHandler.cs
    startLine: 12
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  syntax:
    content: 'public class GetListOfInstrumentsQueryHandler : IRequestHandler<GetListOfInstrumentsQuery, IReadOnlyCollection<InstrumentViewModel>>'
    content.vb: Public Class GetListOfInstrumentsQueryHandler Implements IRequestHandler(Of GetListOfInstrumentsQuery, IReadOnlyCollection(Of InstrumentViewModel))
  inheritance:
  - System.Object
  implements:
  - MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.#ctor(DB.Application.Contracts.Persistance.IInstrumentRepository,DB.Application.Contracts.Factories.IInstrumentViewModelFactory)
  commentId: M:DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.#ctor(DB.Application.Contracts.Persistance.IInstrumentRepository,DB.Application.Contracts.Factories.IInstrumentViewModelFactory)
  id: '#ctor(DB.Application.Contracts.Persistance.IInstrumentRepository,DB.Application.Contracts.Factories.IInstrumentViewModelFactory)'
  parent: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler
  langs:
  - csharp
  - vb
  name: GetListOfInstrumentsQueryHandler(IInstrumentRepository, IInstrumentViewModelFactory)
  nameWithType: GetListOfInstrumentsQueryHandler.GetListOfInstrumentsQueryHandler(IInstrumentRepository, IInstrumentViewModelFactory)
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.GetListOfInstrumentsQueryHandler(DB.Application.Contracts.Persistance.IInstrumentRepository, DB.Application.Contracts.Factories.IInstrumentViewModelFactory)
  type: Constructor
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Instruments/Queries/GetListOfInstruments/GetListOfInstrumentsQueryHandler.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: .ctor
    path: ../SciConnect/Services/DB/DB.Application/Features/Instruments/Queries/GetListOfInstruments/GetListOfInstrumentsQueryHandler.cs
    startLine: 17
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  syntax:
    content: public GetListOfInstrumentsQueryHandler(IInstrumentRepository instrumentRepository, IInstrumentViewModelFactory viewModelFactory)
    parameters:
    - id: instrumentRepository
      type: DB.Application.Contracts.Persistance.IInstrumentRepository
    - id: viewModelFactory
      type: DB.Application.Contracts.Factories.IInstrumentViewModelFactory
    content.vb: Public Sub New(instrumentRepository As IInstrumentRepository, viewModelFactory As IInstrumentViewModelFactory)
  overload: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.#ctor*
  nameWithType.vb: GetListOfInstrumentsQueryHandler.New(IInstrumentRepository, IInstrumentViewModelFactory)
  fullName.vb: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.New(DB.Application.Contracts.Persistance.IInstrumentRepository, DB.Application.Contracts.Factories.IInstrumentViewModelFactory)
  name.vb: New(IInstrumentRepository, IInstrumentViewModelFactory)
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
  commentId: M:DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
  id: Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
  parent: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler
  langs:
  - csharp
  - vb
  name: Handle(GetListOfInstrumentsQuery, CancellationToken)
  nameWithType: GetListOfInstrumentsQueryHandler.Handle(GetListOfInstrumentsQuery, CancellationToken)
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: SciConnect/Services/DB/DB.Application/Features/Instruments/Queries/GetListOfInstruments/GetListOfInstrumentsQueryHandler.cs
      branch: feature/autocomplete
      repo: https://github.com/RS2-Crew/SciConnect.git
    id: Handle
    path: ../SciConnect/Services/DB/DB.Application/Features/Instruments/Queries/GetListOfInstruments/GetListOfInstrumentsQueryHandler.cs
    startLine: 23
  assemblies:
  - DB.Application
  namespace: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  summary: Handles a request
  example: []
  syntax:
    content: public Task<IReadOnlyCollection<InstrumentViewModel>> Handle(GetListOfInstrumentsQuery request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
      description: The request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
      description: Response from the request
    content.vb: Public Function Handle(request As GetListOfInstrumentsQuery, cancellationToken As CancellationToken) As Task(Of IReadOnlyCollection(Of InstrumentViewModel))
  overload: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle*
  implements:
  - MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
references:
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  commentId: N:DB.Application.Features.Instruments.Queries.GetListOfInstruments
  href: DB.html
  name: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  nameWithType: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Instruments
    name: Instruments
    href: DB.Application.Features.Instruments.html
  - name: .
  - uid: DB.Application.Features.Instruments.Queries
    name: Queries
    href: DB.Application.Features.Instruments.Queries.html
  - name: .
  - uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments
    name: GetListOfInstruments
    href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Features
    name: Features
    href: DB.Application.Features.html
  - name: .
  - uid: DB.Application.Features.Instruments
    name: Instruments
    href: DB.Application.Features.Instruments.html
  - name: .
  - uid: DB.Application.Features.Instruments.Queries
    name: Queries
    href: DB.Application.Features.Instruments.Queries.html
  - name: .
  - uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments
    name: GetListOfInstruments
    href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
  commentId: T:MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  name: IRequestHandler<GetListOfInstrumentsQuery, IReadOnlyCollection<InstrumentViewModel>>
  nameWithType: IRequestHandler<GetListOfInstrumentsQuery, IReadOnlyCollection<InstrumentViewModel>>
  fullName: MediatR.IRequestHandler<DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Collections.Generic.IReadOnlyCollection<DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel>>
  nameWithType.vb: IRequestHandler(Of GetListOfInstrumentsQuery, IReadOnlyCollection(Of InstrumentViewModel))
  fullName.vb: MediatR.IRequestHandler(Of DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Collections.Generic.IReadOnlyCollection(Of DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel))
  name.vb: IRequestHandler(Of GetListOfInstrumentsQuery, IReadOnlyCollection(Of InstrumentViewModel))
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
    name: GetListOfInstrumentsQuery
    href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel
    name: InstrumentViewModel
    href: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
    name: GetListOfInstrumentsQuery
    href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel
    name: InstrumentViewModel
    href: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel.html
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.#ctor*
  commentId: Overload:DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.#ctor
  href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.html#DB_Application_Features_Instruments_Queries_GetListOfInstruments_GetListOfInstrumentsQueryHandler__ctor_DB_Application_Contracts_Persistance_IInstrumentRepository_DB_Application_Contracts_Factories_IInstrumentViewModelFactory_
  name: GetListOfInstrumentsQueryHandler
  nameWithType: GetListOfInstrumentsQueryHandler.GetListOfInstrumentsQueryHandler
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.GetListOfInstrumentsQueryHandler
  nameWithType.vb: GetListOfInstrumentsQueryHandler.New
  fullName.vb: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.New
  name.vb: New
- uid: DB.Application.Contracts.Persistance.IInstrumentRepository
  commentId: T:DB.Application.Contracts.Persistance.IInstrumentRepository
  parent: DB.Application.Contracts.Persistance
  href: DB.Application.Contracts.Persistance.IInstrumentRepository.html
  name: IInstrumentRepository
  nameWithType: IInstrumentRepository
  fullName: DB.Application.Contracts.Persistance.IInstrumentRepository
- uid: DB.Application.Contracts.Factories.IInstrumentViewModelFactory
  commentId: T:DB.Application.Contracts.Factories.IInstrumentViewModelFactory
  parent: DB.Application.Contracts.Factories
  href: DB.Application.Contracts.Factories.IInstrumentViewModelFactory.html
  name: IInstrumentViewModelFactory
  nameWithType: IInstrumentViewModelFactory
  fullName: DB.Application.Contracts.Factories.IInstrumentViewModelFactory
- uid: DB.Application.Contracts.Persistance
  commentId: N:DB.Application.Contracts.Persistance
  href: DB.html
  name: DB.Application.Contracts.Persistance
  nameWithType: DB.Application.Contracts.Persistance
  fullName: DB.Application.Contracts.Persistance
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Persistance
    name: Persistance
    href: DB.Application.Contracts.Persistance.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Persistance
    name: Persistance
    href: DB.Application.Contracts.Persistance.html
- uid: DB.Application.Contracts.Factories
  commentId: N:DB.Application.Contracts.Factories
  href: DB.html
  name: DB.Application.Contracts.Factories
  nameWithType: DB.Application.Contracts.Factories
  fullName: DB.Application.Contracts.Factories
  spec.csharp:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Factories
    name: Factories
    href: DB.Application.Contracts.Factories.html
  spec.vb:
  - uid: DB
    name: DB
    href: DB.html
  - name: .
  - uid: DB.Application
    name: Application
    href: DB.Application.html
  - name: .
  - uid: DB.Application.Contracts
    name: Contracts
    href: DB.Application.Contracts.html
  - name: .
  - uid: DB.Application.Contracts.Factories
    name: Factories
    href: DB.Application.Contracts.Factories.html
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle*
  commentId: Overload:DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle
  href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.html#DB_Application_Features_Instruments_Queries_GetListOfInstruments_GetListOfInstrumentsQueryHandler_Handle_DB_Application_Features_Instruments_Queries_GetListOfInstruments_GetListOfInstrumentsQuery_System_Threading_CancellationToken_
  name: Handle
  nameWithType: GetListOfInstrumentsQueryHandler.Handle
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQueryHandler.Handle
- uid: MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  name: Handle(GetListOfInstrumentsQuery, CancellationToken)
  nameWithType: IRequestHandler<GetListOfInstrumentsQuery, IReadOnlyCollection<InstrumentViewModel>>.Handle(GetListOfInstrumentsQuery, CancellationToken)
  fullName: MediatR.IRequestHandler<DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Collections.Generic.IReadOnlyCollection<DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel>>.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of GetListOfInstrumentsQuery, IReadOnlyCollection(Of InstrumentViewModel)).Handle(GetListOfInstrumentsQuery, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Collections.Generic.IReadOnlyCollection(Of DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel)).Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
    name: GetListOfInstrumentsQuery
    href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler{DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}.Handle(DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
    name: GetListOfInstrumentsQuery
    href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
  commentId: T:DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
  parent: DB.Application.Features.Instruments.Queries.GetListOfInstruments
  href: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery.html
  name: GetListOfInstrumentsQuery
  nameWithType: GetListOfInstrumentsQuery
  fullName: DB.Application.Features.Instruments.Queries.GetListOfInstruments.GetListOfInstrumentsQuery
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyCollection<InstrumentViewModel>>
  nameWithType: Task<IReadOnlyCollection<InstrumentViewModel>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel>>
  nameWithType.vb: Task(Of IReadOnlyCollection(Of InstrumentViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyCollection(Of DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel))
  name.vb: Task(Of IReadOnlyCollection(Of InstrumentViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel
    name: InstrumentViewModel
    href: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel
    name: InstrumentViewModel
    href: DB.Application.Features.Instruments.Queries.ViewModels.InstrumentViewModel.html
  - name: )
  - name: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
